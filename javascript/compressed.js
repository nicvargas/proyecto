class Graph{constructor(){this.nodes=[],this.adjacentList={}}addNode(a){this.nodes.push(a),this.adjacentList[a]=[]}addEdge(a,b,c){let d=this.adjacentList[a].findIndex(a=>a.node===b),e=this.adjacentList[b].findIndex(b=>b.node===a);-1!==d&&-1!==e?(this.adjacentList[a][d]={node:b,weight:c},this.adjacentList[b][e]={node:a,weight:c}):(this.adjacentList[a].push({node:b,weight:c}),this.adjacentList[b].push({node:a,weight:c}))}dijkstra(a,b){if(!this.adjacentList[a].length||!this.adjacentList[b].length)return[["none"],0];let c={},d={},e=new PriorityQueue;for(c[a]=0,this.nodes.forEach(b=>{b!==a&&(c[b]=1/0)}),e.enqueue([a,0]);!e.isEmpty();){let a=e.dequeue(),b=a[0];this.adjacentList[b].forEach(a=>{let f=c[b]+a.weight;f<c[a.node]&&(c[a.node]=f,d[a.node]=b,e.enqueue([a.node,f]))})}let f=[b],g=b;for(;g!==a;)f.unshift(d[g]),g=d[g];return[f,c[b]]}}class PriorityQueue{constructor(){this.collection=[]}enqueue(a){if(this.isEmpty())this.collection.push(a);else{let b=!1;for(let c=1;c<this.collection.length;++c)if(a[1]<this.collection[c-1][1]){this.collection.splice(c-1,0,a),b=!0;break}b||this.collection.push(a)}}dequeue(){return this.collection.shift()}isEmpty(){return 0===this.collection.length}}const nodePaint=({id:a,x:b,y:c},d,e)=>{e.fillStyle=d,(()=>{e.beginPath(),e.arc(b,c,8,0,4*Math.PI,!1),e.fill(),e.font=`${8}px Sans-Serif`,e.textAlign="center",e.textBaseline="middle",e.fillStyle="white",e.fillText(a,b,c)})()},linkCanvasObject=(a,b)=>{const d=a.source,e=a.target;if("object"!=typeof d||"object"!=typeof e)return;const f=Object.assign(...["x","y"].map(a=>({[a]:d[a]+(e[a]-d[a])/2}))),g={x:e.x-d.x,y:e.y-d.y},h=Math.sqrt(Math.pow(g.x,2)+Math.pow(g.y,2))-2*6;let i=Math.atan2(g.y,g.x);i>Math.PI/2&&(i=-(Math.PI-i)),i<-Math.PI/2&&(i=-(-Math.PI-i));const j=`${a.value}`;b.font="2px Sans-Serif";const k=Math.min(4,h/b.measureText(j).width);b.font=`${k}px Sans-Serif`;const l=b.measureText(j).width,m=[l,k].map(a=>a+.2*k);b.save(),b.translate(f.x,f.y),b.rotate(i),b.fillStyle="rgba(255, 255, 255, 0.8)",b.fillRect(-m[0]/2,-m[1]/2,...m),b.textAlign="center",b.textBaseline="middle",b.fillStyle="#000",b.fillText(j,0,0),b.restore()},getColor=(a,b)=>b.has(a)?"red":"#3082b9";